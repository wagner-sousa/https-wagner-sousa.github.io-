# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: GitHubPages

on:
  push:
    branches: [ "master" ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - run: npm ci
      - run: npm run build
      
      - name: Caching ./src path
        uses: actions/cache/save@v3
        id: cache-src
        with:
          path: ./src
          key: ${{ runner.temp }}--${{ github.run_id }}-src

  # Single deploy job since we're just deploying
  deploy:
    needs: build
    environment:
      name: github-pages
      url: "https://wagner-sousa.github.io/"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get cache ./src path
        id: cache-src
        uses: actions/cache@v3
        env:
          SEGMENT_DOWNLOAD_TIMEOUT_MINS: 1
        with:
          path: ./src
          key: ${{ runner.temp }}--${{ github.run_id }}-src
      
      - name: Setup Pages
        uses: actions/configure-pages@v3


      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'
        
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3